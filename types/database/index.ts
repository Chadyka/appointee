/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/bookings": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookings.id"];
          created_at?: parameters["rowFilter.bookings.created_at"];
          updated_at?: parameters["rowFilter.bookings.updated_at"];
          starts_at?: parameters["rowFilter.bookings.starts_at"];
          ends_at?: parameters["rowFilter.bookings.ends_at"];
          price?: parameters["rowFilter.bookings.price"];
          service_id?: parameters["rowFilter.bookings.service_id"];
          customer_id?: parameters["rowFilter.bookings.customer_id"];
          "buffer_starts_at	"?: parameters["rowFilter.bookings.buffer_starts_at	"];
          buffer_ends_at?: parameters["rowFilter.bookings.buffer_ends_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["bookings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** bookings */
          bookings?: definitions["bookings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookings.id"];
          created_at?: parameters["rowFilter.bookings.created_at"];
          updated_at?: parameters["rowFilter.bookings.updated_at"];
          starts_at?: parameters["rowFilter.bookings.starts_at"];
          ends_at?: parameters["rowFilter.bookings.ends_at"];
          price?: parameters["rowFilter.bookings.price"];
          service_id?: parameters["rowFilter.bookings.service_id"];
          customer_id?: parameters["rowFilter.bookings.customer_id"];
          "buffer_starts_at	"?: parameters["rowFilter.bookings.buffer_starts_at	"];
          buffer_ends_at?: parameters["rowFilter.bookings.buffer_ends_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookings.id"];
          created_at?: parameters["rowFilter.bookings.created_at"];
          updated_at?: parameters["rowFilter.bookings.updated_at"];
          starts_at?: parameters["rowFilter.bookings.starts_at"];
          ends_at?: parameters["rowFilter.bookings.ends_at"];
          price?: parameters["rowFilter.bookings.price"];
          service_id?: parameters["rowFilter.bookings.service_id"];
          customer_id?: parameters["rowFilter.bookings.customer_id"];
          "buffer_starts_at	"?: parameters["rowFilter.bookings.buffer_starts_at	"];
          buffer_ends_at?: parameters["rowFilter.bookings.buffer_ends_at"];
        };
        body: {
          /** bookings */
          bookings?: definitions["bookings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/services": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          updated_at?: parameters["rowFilter.services.updated_at"];
          slug?: parameters["rowFilter.services.slug"];
          title?: parameters["rowFilter.services.title"];
          duration?: parameters["rowFilter.services.duration"];
          price?: parameters["rowFilter.services.price"];
          provider_id?: parameters["rowFilter.services.provider_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** services */
          services?: definitions["services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          updated_at?: parameters["rowFilter.services.updated_at"];
          slug?: parameters["rowFilter.services.slug"];
          title?: parameters["rowFilter.services.title"];
          duration?: parameters["rowFilter.services.duration"];
          price?: parameters["rowFilter.services.price"];
          provider_id?: parameters["rowFilter.services.provider_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          updated_at?: parameters["rowFilter.services.updated_at"];
          slug?: parameters["rowFilter.services.slug"];
          title?: parameters["rowFilter.services.title"];
          duration?: parameters["rowFilter.services.duration"];
          price?: parameters["rowFilter.services.price"];
          provider_id?: parameters["rowFilter.services.provider_id"];
        };
        body: {
          /** services */
          services?: definitions["services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/providers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.providers.id"];
          created_at?: parameters["rowFilter.providers.created_at"];
          updated_at?: parameters["rowFilter.providers.updated_at"];
          full_name?: parameters["rowFilter.providers.full_name"];
          first_name?: parameters["rowFilter.providers.first_name"];
          last_name?: parameters["rowFilter.providers.last_name"];
          phone?: parameters["rowFilter.providers.phone"];
          email?: parameters["rowFilter.providers.email"];
          avatar_url?: parameters["rowFilter.providers.avatar_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["providers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** providers */
          providers?: definitions["providers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.providers.id"];
          created_at?: parameters["rowFilter.providers.created_at"];
          updated_at?: parameters["rowFilter.providers.updated_at"];
          full_name?: parameters["rowFilter.providers.full_name"];
          first_name?: parameters["rowFilter.providers.first_name"];
          last_name?: parameters["rowFilter.providers.last_name"];
          phone?: parameters["rowFilter.providers.phone"];
          email?: parameters["rowFilter.providers.email"];
          avatar_url?: parameters["rowFilter.providers.avatar_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.providers.id"];
          created_at?: parameters["rowFilter.providers.created_at"];
          updated_at?: parameters["rowFilter.providers.updated_at"];
          full_name?: parameters["rowFilter.providers.full_name"];
          first_name?: parameters["rowFilter.providers.first_name"];
          last_name?: parameters["rowFilter.providers.last_name"];
          phone?: parameters["rowFilter.providers.phone"];
          email?: parameters["rowFilter.providers.email"];
          avatar_url?: parameters["rowFilter.providers.avatar_url"];
        };
        body: {
          /** providers */
          providers?: definitions["providers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          first_name?: parameters["rowFilter.profiles.first_name"];
          last_name?: parameters["rowFilter.profiles.last_name"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          email?: parameters["rowFilter.profiles.email"];
          phone?: parameters["rowFilter.profiles.phone"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          first_name?: parameters["rowFilter.profiles.first_name"];
          last_name?: parameters["rowFilter.profiles.last_name"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          email?: parameters["rowFilter.profiles.email"];
          phone?: parameters["rowFilter.profiles.phone"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          first_name?: parameters["rowFilter.profiles.first_name"];
          last_name?: parameters["rowFilter.profiles.last_name"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          email?: parameters["rowFilter.profiles.email"];
          phone?: parameters["rowFilter.profiles.phone"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          first_name?: parameters["rowFilter.customers.first_name"];
          last_name?: parameters["rowFilter.customers.last_name"];
          email?: parameters["rowFilter.customers.email"];
          phone?: parameters["rowFilter.customers.phone"];
          country_code?: parameters["rowFilter.customers.country_code"];
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          address_id?: parameters["rowFilter.customers.address_id"];
          full_name?: parameters["rowFilter.customers.full_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          first_name?: parameters["rowFilter.customers.first_name"];
          last_name?: parameters["rowFilter.customers.last_name"];
          email?: parameters["rowFilter.customers.email"];
          phone?: parameters["rowFilter.customers.phone"];
          country_code?: parameters["rowFilter.customers.country_code"];
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          address_id?: parameters["rowFilter.customers.address_id"];
          full_name?: parameters["rowFilter.customers.full_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          first_name?: parameters["rowFilter.customers.first_name"];
          last_name?: parameters["rowFilter.customers.last_name"];
          email?: parameters["rowFilter.customers.email"];
          phone?: parameters["rowFilter.customers.phone"];
          country_code?: parameters["rowFilter.customers.country_code"];
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          address_id?: parameters["rowFilter.customers.address_id"];
          full_name?: parameters["rowFilter.customers.full_name"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/addresses": {
    get: {
      parameters: {
        query: {
          country?: parameters["rowFilter.addresses.country"];
          zip?: parameters["rowFilter.addresses.zip"];
          city?: parameters["rowFilter.addresses.city"];
          street_address?: parameters["rowFilter.addresses.street_address"];
          id?: parameters["rowFilter.addresses.id"];
          created_at?: parameters["rowFilter.addresses.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["addresses"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** addresses */
          addresses?: definitions["addresses"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          country?: parameters["rowFilter.addresses.country"];
          zip?: parameters["rowFilter.addresses.zip"];
          city?: parameters["rowFilter.addresses.city"];
          street_address?: parameters["rowFilter.addresses.street_address"];
          id?: parameters["rowFilter.addresses.id"];
          created_at?: parameters["rowFilter.addresses.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          country?: parameters["rowFilter.addresses.country"];
          zip?: parameters["rowFilter.addresses.zip"];
          city?: parameters["rowFilter.addresses.city"];
          street_address?: parameters["rowFilter.addresses.street_address"];
          id?: parameters["rowFilter.addresses.id"];
          created_at?: parameters["rowFilter.addresses.created_at"];
        };
        body: {
          /** addresses */
          addresses?: definitions["addresses"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  bookings: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: timestamp with time zone */
    starts_at?: string;
    /** Format: timestamp with time zone */
    ends_at?: string;
    /** Format: real */
    price?: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `customers.id`.<fk table='customers' column='id'/>
     */
    customer_id?: string;
    /** Format: timestamp with time zone */
    "buffer_starts_at	"?: string;
    /** Format: timestamp with time zone */
    buffer_ends_at?: string;
  };
  services: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: text */
    slug?: string;
    /** Format: text */
    title?: string;
    /** Format: integer */
    duration?: number;
    /** Format: real */
    price?: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `providers.id`.<fk table='providers' column='id'/>
     */
    provider_id?: string;
  };
  providers: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: text */
    full_name?: string;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: text */
    phone?: string;
    /** Format: text */
    email?: string;
    /** Format: text */
    avatar_url?: string;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: text */
    full_name?: string;
    /** Format: text */
    email?: string;
    /** Format: text */
    phone?: string;
  };
  customers: {
    /** Format: text */
    first_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: text */
    email?: string;
    /** Format: text */
    phone?: string;
    /** Format: text */
    country_code?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `addresses.id`.<fk table='addresses' column='id'/>
     */
    address_id?: string;
    /**
     * Format: text
     * @default
     */
    full_name?: string;
  };
  addresses: {
    /** Format: text */
    country?: string;
    /** Format: bigint */
    zip?: number;
    /** Format: text */
    city?: string;
    /** Format: text */
    street_address?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description bookings */
  "body.bookings": definitions["bookings"];
  /** Format: uuid */
  "rowFilter.bookings.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.bookings.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.bookings.updated_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.bookings.starts_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.bookings.ends_at": string;
  /** Format: real */
  "rowFilter.bookings.price": string;
  /** Format: uuid */
  "rowFilter.bookings.service_id": string;
  /** Format: uuid */
  "rowFilter.bookings.customer_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.bookings.buffer_starts_at	": string;
  /** Format: timestamp with time zone */
  "rowFilter.bookings.buffer_ends_at": string;
  /** @description services */
  "body.services": definitions["services"];
  /** Format: uuid */
  "rowFilter.services.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.services.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.services.updated_at": string;
  /** Format: text */
  "rowFilter.services.slug": string;
  /** Format: text */
  "rowFilter.services.title": string;
  /** Format: integer */
  "rowFilter.services.duration": string;
  /** Format: real */
  "rowFilter.services.price": string;
  /** Format: uuid */
  "rowFilter.services.provider_id": string;
  /** @description providers */
  "body.providers": definitions["providers"];
  /** Format: uuid */
  "rowFilter.providers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.providers.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.providers.updated_at": string;
  /** Format: text */
  "rowFilter.providers.full_name": string;
  /** Format: text */
  "rowFilter.providers.first_name": string;
  /** Format: text */
  "rowFilter.providers.last_name": string;
  /** Format: text */
  "rowFilter.providers.phone": string;
  /** Format: text */
  "rowFilter.providers.email": string;
  /** Format: text */
  "rowFilter.providers.avatar_url": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
  /** Format: text */
  "rowFilter.profiles.first_name": string;
  /** Format: text */
  "rowFilter.profiles.last_name": string;
  /** Format: text */
  "rowFilter.profiles.full_name": string;
  /** Format: text */
  "rowFilter.profiles.email": string;
  /** Format: text */
  "rowFilter.profiles.phone": string;
  /** @description customers */
  "body.customers": definitions["customers"];
  /** Format: text */
  "rowFilter.customers.first_name": string;
  /** Format: text */
  "rowFilter.customers.last_name": string;
  /** Format: text */
  "rowFilter.customers.email": string;
  /** Format: text */
  "rowFilter.customers.phone": string;
  /** Format: text */
  "rowFilter.customers.country_code": string;
  /** Format: uuid */
  "rowFilter.customers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.customers.created_at": string;
  /** Format: uuid */
  "rowFilter.customers.address_id": string;
  /** Format: text */
  "rowFilter.customers.full_name": string;
  /** @description addresses */
  "body.addresses": definitions["addresses"];
  /** Format: text */
  "rowFilter.addresses.country": string;
  /** Format: bigint */
  "rowFilter.addresses.zip": string;
  /** Format: text */
  "rowFilter.addresses.city": string;
  /** Format: text */
  "rowFilter.addresses.street_address": string;
  /** Format: uuid */
  "rowFilter.addresses.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.addresses.created_at": string;
}

export interface operations {}

export interface external {}
